name: Publish to NPM

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 3.0.0)'
        required: true
        default: '3.0.0'

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Clear npm cache and configure
        run: |
          npm cache clean --force
          npm config set registry https://registry.npmjs.org/
          npm config set @angular:registry https://registry.npmjs.org/
          npm config set @angular-devkit:registry https://registry.npmjs.org/
          npm config set strict-ssl false
          npm config list
        working-directory: ./
      
      - name: Debug - List files
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          echo "Files in projects/ngx-material-drawer:"
          ls -la projects/ngx-material-drawer/
        working-directory: ./
      
      - name: Install dependencies
        run: |
          if [ -f "package-lock.json" ]; then
            echo "Using npm ci with package-lock.json"
            npm ci --no-audit --no-fund
          else
            echo "No package-lock.json found, using npm install"
            npm install --no-audit --no-fund
          fi
        working-directory: ./
      
      - name: Build library
        run: npm run build:lib
        working-directory: ./
      
      - name: Verify build output
        run: |
          echo "âœ… Library built successfully!"
          echo "ðŸ“¦ Build output:"
          ls -la dist/ngx-material-drawer/
          echo "ðŸ“„ Package.json:"
          cat dist/ngx-material-drawer/package.json | head -20
        working-directory: ./
      
      - name: Publish to NPM
        run: |
          cd dist/ngx-material-drawer
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_SECRET }}
        working-directory: ./
      
      - name: Create Git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag v${{ github.event.inputs.version }}
          git push origin v${{ github.event.inputs.version }}
        working-directory: ./
