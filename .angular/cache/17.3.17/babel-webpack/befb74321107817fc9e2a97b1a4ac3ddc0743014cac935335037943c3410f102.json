{"ast":null,"code":"import { BlueCardComponent } from '../blue-card/blue-card.component';\nimport { RedCardComponent } from '../red-card/red-card.component';\nimport { GreenCardComponent } from '../green-card/green-card.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NgxMaterialDrawerEventEmitter } from 'projects/ngx-material-drawer/src/public_api';\nimport { EditorComponent } from 'src/app/json-editor/json-editor.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"projects/ngx-material-drawer/src/public_api\";\nexport let GridContainerComponent = /*#__PURE__*/(() => {\n  class GridContainerComponent {\n    constructor(dialog, matEventEmitterService) {\n      this.dialog = dialog;\n      this.matEventEmitterService = matEventEmitterService;\n      this.componentInstance = {\n        'c1': {\n          component: BlueCardComponent,\n          data: {\n            text: \"I am the Blue C1 component\"\n          }\n        },\n        'c2': {\n          component: RedCardComponent,\n          data: {\n            text: \"I am the Red C2 component\"\n          }\n        },\n        'c3': {\n          component: GreenCardComponent,\n          data: {\n            text: \"I am the Green C3 component\"\n          }\n        },\n        'c4': {\n          component: BlueCardComponent,\n          data: {\n            text: \"I am the Blue C4 component\"\n          }\n        },\n        'c5': {\n          component: RedCardComponent,\n          data: {\n            text: \"I am the Red C5 component\"\n          }\n        },\n        'c6': {\n          component: GreenCardComponent,\n          data: {\n            text: \"I am the Green C6 component\"\n          }\n        }\n      };\n      this.gridData = {\n        cols: 12,\n        rowHeight: '200px',\n        gutterSize: '10px',\n        grids: {\n          xl: {\n            grid: [{\n              cols: 6,\n              rows: 1,\n              component: 'c1'\n            }, {\n              cols: 6,\n              rows: 1,\n              component: 'c2'\n            }, {\n              cols: 12,\n              rows: 2,\n              component: 'c3'\n            }, {\n              cols: 4,\n              rows: 1,\n              component: 'c4'\n            }, {\n              cols: 4,\n              rows: 1,\n              component: 'c5'\n            }, {\n              cols: 4,\n              rows: 1,\n              component: 'c6'\n            }]\n          },\n          sm: {\n            grid: [{\n              cols: 12,\n              rows: 1,\n              component: 'c1'\n            }, {\n              cols: 12,\n              rows: 1,\n              component: 'c2'\n            }, {\n              cols: 12,\n              rows: 1,\n              component: 'c3'\n            }, {\n              cols: 12,\n              rows: 1,\n              component: 'c4'\n            }, {\n              cols: 12,\n              rows: 1,\n              component: 'c5'\n            }, {\n              cols: 12,\n              rows: 1,\n              component: 'c6'\n            }]\n          }\n        }\n      };\n      this.matEventEmitterService.onMenuItemClick.subscribe(event => {\n        if (event.route == 'open-dashboard-json') {\n          const dialogRef = this.dialog.open(EditorComponent, {\n            width: '80%',\n            data: this.gridData\n          });\n          dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            if (result) {\n              this.gridData = result;\n              this.matEventEmitterService.gridDataChange(this.gridData);\n            }\n          });\n        }\n      });\n    }\n    ngOnInit() {}\n    onGridDataChange($event) {\n      this.gridData = $event;\n    }\n    static {\n      this.ɵfac = function GridContainerComponent_Factory(t) {\n        return new (t || GridContainerComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.NgxMaterialDrawerEventEmitter));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: GridContainerComponent,\n        selectors: [[\"app-grid\"]],\n        decls: 1,\n        vars: 2,\n        consts: [[3, \"onGridDataChange\", \"gridData\", \"componentInstance\"]],\n        template: function GridContainerComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-material-grid\", 0);\n            i0.ɵɵlistener(\"onGridDataChange\", function GridContainerComponent_Template_ngx_material_grid_onGridDataChange_0_listener($event) {\n              return ctx.onGridDataChange($event);\n            });\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"gridData\", ctx.gridData)(\"componentInstance\", ctx.componentInstance);\n          }\n        }\n      });\n    }\n  }\n  return GridContainerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}