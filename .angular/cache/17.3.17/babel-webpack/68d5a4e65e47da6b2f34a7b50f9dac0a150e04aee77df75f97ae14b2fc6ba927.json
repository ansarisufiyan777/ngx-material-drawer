{"ast":null,"code":"import { MatMenu } from \"@angular/material/menu\";\nimport { NgxMaterialDrawerEventEmitter } from \"../utils/mat-event-emitter.service\";\nimport { NgxNavService } from \"../utils/nav.service\";\nimport { NgxUtilsService } from \"../utils/utils.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../utils/nav.service\";\nimport * as i2 from \"../utils/mat-event-emitter.service\";\nimport * as i3 from \"../utils/utils.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/menu\";\nimport * as i7 from \"@angular/flex-layout/extended\";\nconst _c0 = [\"childMenu\"];\nfunction NgxMenuListItemComponent_span_3_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"button\", 6)(2, \"mat-icon\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"lib-menu-list-item\", 7, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const menu_r1 = i0.ɵɵreference(7);\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngStyle\", item_r2.style ? item_r2.style : \"\")(\"matMenuTriggerFor\", menu_r1.childMenu);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.iconName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.displayName);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"menus\", item_r2.children);\n  }\n}\nfunction NgxMenuListItemComponent_span_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\")(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function NgxMenuListItemComponent_span_3_span_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const item_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onItemSelected(item_r2));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngStyle\", item_r2.style ? item_r2.style : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.iconName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.displayName);\n  }\n}\nfunction NgxMenuListItemComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, NgxMenuListItemComponent_span_3_span_1_Template, 8, 5, \"span\", 5)(2, NgxMenuListItemComponent_span_3_span_2_Template, 6, 3, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r2.children && item_r2.children.length > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !item_r2.children || item_r2.children.length === 0);\n  }\n}\nexport let NgxMenuListItemComponent = /*#__PURE__*/(() => {\n  class NgxMenuListItemComponent {\n    constructor(navService, matEventEmitterService, ngxUtilsService) {\n      this.navService = navService;\n      this.matEventEmitterService = matEventEmitterService;\n      this.ngxUtilsService = ngxUtilsService;\n      this.expanded = false;\n      this.ariaExpanded = this.expanded;\n      this.depth = 0;\n      if (this.depth === undefined) {\n        this.depth = 0;\n      }\n    }\n    ngOnInit() {\n      this.navService.currentUrl.subscribe(url => {\n        if (this.menus.route && url) {\n          // console.log(`Checking '/${this.item.route}' against '${url}'`);\n          this.expanded = url.indexOf(`/${this.menus.route}`) === 0;\n          this.ariaExpanded = this.expanded;\n          // console.log(`${this.item.route} is expanded: ${this.expanded}`);\n        }\n      });\n    }\n    onItemSelected(item) {\n      if (!item.children || !item.children.length) {\n        this.matEventEmitterService.menuItemClick(item);\n      }\n      if (item.children && item.children.length) {\n        this.expanded = !this.expanded;\n        if (this.expanded) {\n          this.matEventEmitterService.menuItemExpanded(item);\n        } else {\n          this.matEventEmitterService.menuItemCollapsed(item);\n        }\n      }\n    }\n    static {\n      this.ɵfac = function NgxMenuListItemComponent_Factory(t) {\n        return new (t || NgxMenuListItemComponent)(i0.ɵɵdirectiveInject(i1.NgxNavService), i0.ɵɵdirectiveInject(i2.NgxMaterialDrawerEventEmitter), i0.ɵɵdirectiveInject(i3.NgxUtilsService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: NgxMenuListItemComponent,\n        selectors: [[\"lib-menu-list-item\"]],\n        viewQuery: function NgxMenuListItemComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childMenu = _t.first);\n          }\n        },\n        hostVars: 1,\n        hostBindings: function NgxMenuListItemComponent_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-expanded\", ctx.ariaExpanded);\n          }\n        },\n        inputs: {\n          menus: \"menus\",\n          depth: \"depth\",\n          matMenu: \"matMenu\"\n        },\n        exportAs: [\"menuInMenuListItemComponent\"],\n        decls: 4,\n        vars: 2,\n        consts: [[\"childMenu\", \"matMenu\"], [\"menu\", \"\"], [1, \"toolbar-spacer\"], [3, \"overlapTrigger\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"mat-menu-item\", \"\", \"color\", \"primary\", 3, \"ngStyle\", \"matMenuTriggerFor\"], [3, \"menus\"], [\"mat-menu-item\", \"\", 3, \"click\", \"ngStyle\"]],\n        template: function NgxMenuListItemComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelement(0, \"span\", 2);\n            i0.ɵɵelementStart(1, \"mat-menu\", 3, 0);\n            i0.ɵɵtemplate(3, NgxMenuListItemComponent_span_3_Template, 3, 2, \"span\", 4);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"overlapTrigger\", false);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.menus);\n          }\n        },\n        dependencies: [i4.NgForOf, i4.NgIf, i4.NgStyle, i5.MatIcon, i6.MatMenu, i6.MatMenuItem, i6.MatMenuTrigger, i7.DefaultStyleDirective, NgxMenuListItemComponent],\n        styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%]; (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  {// webpackBootstrap var __webpack_modules__ = ({163: (() => {throw new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):nCan't find stylesheet to import.n  \\\\2577n6 \\\\2502  @import '~@angular/material/theming';n  \\\\2502          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^n  \\\\2575n  projects/ngx-material-drawer/src/lib/app/scss/styles.scss 6:9                              @importn  projects/ngx-material-drawer/src/lib/app/menu-list-item/menu-list-item.component.scss 1:9  root stylesheet\\\");})}); // startup // Load entry module and return exports // This entry module doesn\\\"t tell about it\\\"s top-level declarations so it can't be inlined\\nvar __webpack_exports__ = {}; __webpack_modules__[163](); resource = __webpack_exports__;})()[_ngcontent-%COMP%]   ;[_ngcontent-%COMP%]{}\"]\n      });\n    }\n  }\n  return NgxMenuListItemComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}