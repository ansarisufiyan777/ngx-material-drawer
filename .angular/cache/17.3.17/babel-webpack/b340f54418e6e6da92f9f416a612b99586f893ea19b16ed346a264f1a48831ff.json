{"ast":null,"code":"import { NgxNavService } from \"../utils/nav.service\";\nimport { animate, style, transition, trigger } from \"@angular/animations\";\nimport { NgxMaterialDrawerEventEmitter } from \"../utils/mat-event-emitter.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../utils/nav.service\";\nimport * as i2 from \"../utils/mat-event-emitter.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/tooltip\";\nimport * as i7 from \"@angular/flex-layout/extended\";\nfunction NgxFabComponent_div_0_div_1_ng_container_1_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function NgxFabComponent_div_0_div_1_ng_container_1_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const item_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r2.onFabClick(item_r2));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngStyle\", (item_r2 == null ? null : item_r2.style) ? item_r2 == null ? null : item_r2.style : \"\")(\"matTooltip\", item_r2 == null ? null : item_r2.tooltip);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2 == null ? null : item_r2.icon);\n  }\n}\nfunction NgxFabComponent_div_0_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NgxFabComponent_div_0_div_1_ng_container_1_button_1_Template, 3, 3, \"button\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r2 == null ? null : item_r2.isEnable);\n  }\n}\nfunction NgxFabComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, NgxFabComponent_div_0_div_1_ng_container_1_Template, 2, 1, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@slideInOut\", undefined);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.fabData == null ? null : ctx_r2.fabData.children);\n  }\n}\nfunction NgxFabComponent_div_0_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function NgxFabComponent_div_0_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onMainFabClick(ctx_r2.fabData));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"matTooltip\", ctx_r2.fabData == null ? null : ctx_r2.fabData.tooltip)(\"ngStyle\", (ctx_r2.fabData == null ? null : ctx_r2.fabData.style) ? ctx_r2.fabData == null ? null : ctx_r2.fabData.style : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.fabData == null ? null : ctx_r2.fabData.icon);\n  }\n}\nfunction NgxFabComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, NgxFabComponent_div_0_div_1_Template, 2, 2, \"div\", 2)(2, NgxFabComponent_div_0_button_2_Template, 3, 3, \"button\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.expanded);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.fabData == null ? null : ctx_r2.fabData.isEnable);\n  }\n}\nexport let NgxFabComponent = /*#__PURE__*/(() => {\n  class NgxFabComponent {\n    constructor(navService, matEventEmitterService) {\n      this.navService = navService;\n      this.matEventEmitterService = matEventEmitterService;\n      this.expanded = false;\n    }\n    ngOnInit() {}\n    onFabClick(item) {\n      this.matEventEmitterService.fabButtonClick(item);\n    }\n    onMainFabClick(item) {\n      this.expanded = !this.expanded;\n      if (this.fabData && this.fabData.children && this.fabData.children.length && this.fabData.children.filter(f => f.isEnable).length) {\n        if (this.expanded) {\n          this.matEventEmitterService.fabExpanded(item);\n        } else {\n          this.matEventEmitterService.fabCollapsed(item);\n        }\n      } else {\n        this.matEventEmitterService.mainFabButtonClick(item);\n      }\n    }\n    static {\n      this.ɵfac = function NgxFabComponent_Factory(t) {\n        return new (t || NgxFabComponent)(i0.ɵɵdirectiveInject(i1.NgxNavService), i0.ɵɵdirectiveInject(i2.NgxMaterialDrawerEventEmitter));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: NgxFabComponent,\n        selectors: [[\"lib-fab\"]],\n        inputs: {\n          fabData: \"fabData\"\n        },\n        decls: 1,\n        vars: 1,\n        consts: [[\"class\", \"ngx-material-fab\", 4, \"ngIf\"], [1, \"ngx-material-fab\"], [\"class\", \"ngx-material-mini-fab\", 4, \"ngIf\"], [\"mat-fab\", \"\", 3, \"matTooltip\", \"ngStyle\", \"click\", 4, \"ngIf\"], [1, \"ngx-material-mini-fab\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-mini-fab\", \"\", \"class\", \"mini-fab\", 3, \"ngStyle\", \"matTooltip\", \"click\", 4, \"ngIf\"], [\"mat-mini-fab\", \"\", 1, \"mini-fab\", 3, \"click\", \"ngStyle\", \"matTooltip\"], [\"mat-fab\", \"\", 3, \"click\", \"matTooltip\", \"ngStyle\"]],\n        template: function NgxFabComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, NgxFabComponent_div_0_Template, 3, 2, \"div\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.fabData == null ? null : ctx.fabData.isEnable);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i3.NgStyle, i4.MatMiniFabButton, i4.MatFabButton, i5.MatIcon, i6.MatTooltip, i7.DefaultStyleDirective],\n        styles: [\".ngx-material-fab[_ngcontent-%COMP%]{position:fixed;z-index:5;right:25px;bottom:25px}.ngx-material-fab[_ngcontent-%COMP%]   .ngx-material-mini-fab[_ngcontent-%COMP%]{position:absolute;left:0;bottom:55px;padding:10px}.ngx-material-fab[_ngcontent-%COMP%]   .ngx-material-mini-fab[_ngcontent-%COMP%]   .mini-fab[_ngcontent-%COMP%]{margin-top:5px}\"],\n        data: {\n          animation: [trigger(\"slideInOut\", [transition(\":enter\", [style({\n            transform: \"translateY(100%)\"\n          }), animate(\"200ms ease-in\", style({\n            transform: \"translateY(0%)\"\n          }))]), transition(\":leave\", [animate(\"200ms ease-in\", style({\n            transform: \"translateY(100%)\"\n          }))])])]\n        }\n      });\n    }\n  }\n  return NgxFabComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}