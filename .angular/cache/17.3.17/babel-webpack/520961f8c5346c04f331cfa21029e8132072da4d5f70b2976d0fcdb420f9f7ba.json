{"ast":null,"code":"import { NgxNavService } from '../utils/nav.service';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { NgxMaterialDrawerEventEmitter } from '../utils/mat-event-emitter.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../utils/nav.service\";\nimport * as i2 from \"../utils/mat-event-emitter.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/list\";\nimport * as i6 from \"@angular/flex-layout/extended\";\nfunction NgxNavListItemMiniComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function NgxNavListItemMiniComponent_a_0_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onItemSelected(ctx_r1.item));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", (ctx_r1.item == null ? null : ctx_r1.item.style) ? ctx_r1.item == null ? null : ctx_r1.item.style : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.item.iconName);\n  }\n}\nfunction NgxNavListItemMiniComponent_div_1_lib_nav_list_item_mini_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"lib-nav-list-item-mini\", 5);\n  }\n  if (rf & 2) {\n    const child_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"item\", child_r3)(\"depth\", ctx_r1.depth + 1);\n  }\n}\nfunction NgxNavListItemMiniComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, NgxNavListItemMiniComponent_div_1_lib_nav_list_item_mini_1_Template, 1, 2, \"lib-nav-list-item-mini\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.item.children);\n  }\n}\nexport let NgxNavListItemMiniComponent = /*#__PURE__*/(() => {\n  class NgxNavListItemMiniComponent {\n    constructor(navService, matEventEmitterService) {\n      this.navService = navService;\n      this.matEventEmitterService = matEventEmitterService;\n      this.ariaExpanded = this.expanded;\n      if (this.depth === undefined) {\n        this.depth = 0;\n      }\n    }\n    ngOnInit() {\n      this.navService.currentUrl.subscribe(url => {\n        if (this.item.route && url) {\n          // console.log(`Checking '/${this.item.route}' against '${url}'`);\n          this.expanded = url.indexOf(`/${this.item.route}`) === 0;\n          this.ariaExpanded = this.expanded;\n          // console.log(`${this.item.route} is expanded: ${this.expanded}`);\n        }\n      });\n    }\n    onItemSelected(item) {\n      if (!item.children || !item.children.length) {\n        if (item.onClickClose) {\n          this.navService.closeNav();\n        }\n        this.matEventEmitterService.sideNavItemClick(item);\n      }\n      if (item.children && item.children.length) {\n        this.expanded = !this.expanded;\n        if (this.expanded) {\n          this.matEventEmitterService.sideNavItemExpanded(item);\n        } else {\n          this.matEventEmitterService.sideNavItemCollapsed(item);\n        }\n      }\n    }\n    static {\n      this.ɵfac = function NgxNavListItemMiniComponent_Factory(t) {\n        return new (t || NgxNavListItemMiniComponent)(i0.ɵɵdirectiveInject(i1.NgxNavService), i0.ɵɵdirectiveInject(i2.NgxMaterialDrawerEventEmitter));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: NgxNavListItemMiniComponent,\n        selectors: [[\"lib-nav-list-item-mini\"]],\n        hostVars: 1,\n        hostBindings: function NgxNavListItemMiniComponent_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-expanded\", ctx.ariaExpanded);\n          }\n        },\n        inputs: {\n          item: \"item\",\n          depth: \"depth\"\n        },\n        decls: 2,\n        vars: 2,\n        consts: [[\"mat-list-item\", \"\", \"class\", \"menu-list-item\", 3, \"ngStyle\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"mat-list-item\", \"\", 1, \"menu-list-item\", 3, \"click\", \"ngStyle\"], [1, \"routeIcon\"], [3, \"item\", \"depth\", 4, \"ngFor\", \"ngForOf\"], [3, \"item\", \"depth\"]],\n        template: function NgxNavListItemMiniComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, NgxNavListItemMiniComponent_a_0_Template, 3, 2, \"a\", 0)(1, NgxNavListItemMiniComponent_div_1_Template, 2, 1, \"div\", 1);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.item);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.expanded);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i3.NgStyle, i4.MatIcon, i5.MatListItem, i6.DefaultStyleDirective, NgxNavListItemMiniComponent],\n        styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%]; (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  {// webpackBootstrap var __webpack_modules__ = ({631: (() => {throw new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):nCan't find stylesheet to import.n  \\\\2577n6 \\\\2502  @import '~@angular/material/theming';n  \\\\2502          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^n  \\\\2575n  projects/ngx-material-drawer/src/lib/app/scss/styles.scss 6:9                                      @importn  projects/ngx-material-drawer/src/lib/app/nav-list-item-mini/nav-list-item-mini.component.scss 1:9  root stylesheet\\\");})}); // startup // Load entry module and return exports // This entry module doesn\\\"t tell about it\\\"s top-level declarations so it can't be inlined\\nvar __webpack_exports__ = {}; __webpack_modules__[631](); resource = __webpack_exports__;})()[_ngcontent-%COMP%]   ;[_ngcontent-%COMP%]{}\"],\n        data: {\n          animation: [trigger('indicatorRotate', [state('collapsed', style({\n            transform: 'rotate(0deg)'\n          })), state('expanded', style({\n            transform: 'rotate(180deg)'\n          })), transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4,0.0,0.2,1)'))])]\n        }\n      });\n    }\n  }\n  return NgxNavListItemMiniComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}