{"version":3,"sources":["ng://ngx-material-drawer/lib/app/utils/mat-event-emitter.service.ts","ng://ngx-material-drawer/lib/app/utils/nav.service.ts","ng://ngx-material-drawer/lib/app/material-drawer/material-drawer.component.ts","ng://ngx-material-drawer/lib/app/nav-list-item/nav-list-item.component.ts","ng://ngx-material-drawer/lib/app/top-nav/top-nav.component.ts","ng://ngx-material-drawer/lib/app/menu-list-item/menu-list-item.component.ts","ng://ngx-material-drawer/lib/app/nav-list-item-mini/nav-list-item-mini.component.ts","ng://ngx-material-drawer/lib/app/material.module.ts","ng://ngx-material-drawer/lib/app/fab/fab.component.ts","ng://ngx-material-drawer/lib/app/matrial-drawer.module.ts"],"names":["NgxMaterialDrawerEventEmitter","this","onMatDrawerInit","Subject","onMatDrawerAfterViewInit","onNavStateChange","onDataChange","ReplaySubject","onSideNavOpen","onSideNavClosed","onMinVarientChange","onSideNavItemClick","onSideNavItemExpanded","onSideNavItemCollapsed","onMenuItemClick","onMenuItemExpanded","onMenuItemCollapsed","onSearchValueChange","onSerachFocusIn","onSerachFocusOut","onSerachInputOpen","onSerachInputClosed","onFabExpanded","onFabCollapsed","onMainFabButtonClick","onFabButtonClick","prototype","matDrawerInit","event","next","matDrawerAfterViewInit","navStateChange","searchValueChange","searchObject","serachFocusIn","serachFocusOut","serachInputOpen","serachInputClosed","dataChange","sideNavOpen","sideNavClosed","minVarientChange","sideNavItemClick","sideNavItemExpanded","sideNavItemCollapsed","menuItemClick","menuItemExpanded","menuItemCollapsed","fabExpanded","fabCollapsed","mainFabButtonClick","fabButtonClick","Injectable","args","providedIn","NgxNavService","matEventEmitterService","currentUrl","BehaviorSubject","undefined","isDrawerOpened","closeNav","isMiniVarient","appDrawer","close","isOpened","getData","openNav","open","toggleNav","toggle","b","drawer","NgxMaterialDrawerComponent","navService","EventEmitter","onSerachValueChange","version","VERSION","subscribeToEventEmitter","ngOnInit","_this","navData","subscribe","res","ngAfterViewInit","emit","Component","selector","template","ViewChild","Input","Output","NgxNavListItemComponent","ariaExpanded","expanded","depth","url","item","route","indexOf","onItemSelected","children","length","onClickClose","animations","trigger","state","style","transform","transition","animate","HostBinding","NgxTopNavComponent","searchValue","flag","toggleSearchBar","isSearchActive","value","inputRef","ngxSearchBox","opacity","NgxMenuListItemComponent","menus","exportAs","NgxNavListItemMiniComponent","MaterialModule","NgModule","exports","MatButtonModule","MatIconModule","MatListModule","MatMenuModule","MatRippleModule","MatSidenavModule","MatToolbarModule","MatTooltipModule","declarations","NgxFabComponent","onFabClick","onMainFabClick","fabData","filter","f","isEnable","NgxMaterialDrawerModule","imports","BrowserModule","CommonModule","BrowserAnimationsModule","FlexLayoutModule","FormsModule","bootstrap","providers"],"mappings":"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","sourcesContent":["import { Injectable, EventEmitter, ElementRef } from '@angular/core';\r\nimport { Subject, ReplaySubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxMaterialDrawerEventEmitter {\r\n\r\n  public onMatDrawerInit = new Subject();\r\n  public onMatDrawerAfterViewInit = new Subject();\r\n  public onNavStateChange = new Subject();\r\n  public onDataChange = new ReplaySubject(1);\r\n  public onSideNavOpen = new Subject();\r\n  public onSideNavClosed = new Subject();\r\n  public onMinVarientChange = new Subject();\r\n  public onSideNavItemClick = new Subject();\r\n  public onSideNavItemExpanded = new Subject();\r\n  public onSideNavItemCollapsed = new Subject();\r\n  public onMenuItemClick = new Subject();\r\n  public onMenuItemExpanded = new Subject();\r\n  public onMenuItemCollapsed = new Subject();\r\n  public onSearchValueChange = new Subject();\r\n  public onSerachFocusIn = new Subject();\r\n  public onSerachFocusOut = new Subject();\r\n  public onSerachInputOpen = new Subject();\r\n  public onSerachInputClosed = new Subject();\r\n  public onFabExpanded = new Subject();\r\n  public onFabCollapsed = new Subject();\r\n  public onMainFabButtonClick = new Subject();\r\n  public onFabButtonClick = new Subject();\r\n\r\n  constructor() { }\r\n  /**\r\n   * Material drawer Main component life cycle\r\n   * @param event json\r\n   */\r\n  public matDrawerInit(event) {\r\n    this.onMatDrawerInit.next(event);\r\n\r\n  }\r\n  /**\r\n   * Material drawer Main component life cycle\r\n   * @param event json\r\n   */\r\n  public matDrawerAfterViewInit(event) {\r\n    this.onMatDrawerAfterViewInit.next(event);\r\n\r\n  }\r\n  /**\r\n   * using on side nav toggle\r\n   * @param event json\r\n   */\r\n  public navStateChange(event) {\r\n    this.onNavStateChange.next(event);\r\n\r\n  }\r\n\r\n  /**\r\n   * On Search value change\r\n   * @param searchObject containing value and input search object\r\n   */\r\n  public searchValueChange(searchObject: { value: string; inputRef: ElementRef<any>; }): any {\r\n    this.onSearchValueChange.next(searchObject);\r\n  }\r\n\r\n  /**\r\n   * On Search focusin\r\n   * @param searchObject containing value and input search object\r\n   */\r\n  public serachFocusIn(searchObject: { value: string; inputRef: ElementRef<any>; }): any {\r\n    this.onSerachFocusIn.next(searchObject);\r\n  }\r\n\r\n  /**\r\n   * On Search focusout\r\n   * @param searchObject containing value and input search object\r\n   */\r\n  public serachFocusOut(searchObject: { value: string; inputRef: ElementRef<any>; }): any {\r\n    this.onSerachFocusOut.next(searchObject);\r\n  }\r\n  /**\r\n   * On Search focusout\r\n   * @param searchObject containing value and input search object\r\n   */\r\n  public serachInputOpen(searchObject: { value: string; inputRef: ElementRef<any>; }): any {\r\n    this.onSerachInputOpen.next(searchObject);\r\n  }\r\n  /**\r\n   * On Search focusout\r\n   * @param searchObject containing value and input search object\r\n   */\r\n  public serachInputClosed(searchObject: { value: string; inputRef: ElementRef<any>; }): any {\r\n    this.onSerachInputClosed.next(searchObject);\r\n  }\r\n\r\n  /**\r\n   * on data chamge\r\n   * @param event new json\r\n   */\r\n  public dataChange(event) {\r\n    this.onDataChange.next(event);\r\n\r\n  }\r\n\r\n  /**\r\n   * using on side nav open\r\n   * @param event json\r\n   */\r\n  public sideNavOpen(event) {\r\n    this.onSideNavOpen.next(event);\r\n\r\n  }\r\n\r\n  /**\r\n   * using on side nav closed\r\n   * @param event json\r\n   */\r\n  public sideNavClosed(event) {\r\n    this.onSideNavClosed.next(event);\r\n\r\n  }\r\n\r\n  /**\r\n   * Not using currently\r\n   * @param event json\r\n   */\r\n  public minVarientChange(event) {\r\n    this.onMinVarientChange.next(event);\r\n\r\n  }\r\n  /**\r\n   * using in side nav item\r\n   * @param event json\r\n   */\r\n  public sideNavItemClick(event) {\r\n    this.onSideNavItemClick.next(event);\r\n\r\n  }\r\n  /**\r\n   * using in side nav item\r\n   * @param event json\r\n   */\r\n  public sideNavItemExpanded(event) {\r\n    this.onSideNavItemExpanded.next(event);\r\n\r\n  }\r\n  /**\r\n   * using in side nav item\r\n   * @param event json\r\n   */\r\n  public sideNavItemCollapsed(event) {\r\n    this.onSideNavItemCollapsed.next(event);\r\n\r\n  }\r\n  /**\r\n   * using in toolbar menu\r\n   * @param event json\r\n   */\r\n  public menuItemClick(event) {\r\n    this.onMenuItemClick.next(event);\r\n\r\n  }\r\n  /**\r\n   * using in toolbar menu\r\n   * @param event json\r\n   */\r\n  public menuItemExpanded(event) {\r\n    this.onMenuItemExpanded.next(event);\r\n\r\n  }\r\n  /**\r\n   * using in toolbar menu\r\n   * @param event json\r\n   */\r\n  public menuItemCollapsed(event) {\r\n    this.onMenuItemCollapsed.next(event);\r\n\r\n  }\r\n  /**\r\n * using in toolbar menu\r\n * @param event json\r\n */\r\n  public fabExpanded(event) {\r\n    this.onFabExpanded.next(event);\r\n\r\n  }\r\n  /**\r\n   * using in toolbar menu\r\n   * @param event json\r\n   */\r\n  public fabCollapsed(event) {\r\n    this.onFabCollapsed.next(event);\r\n\r\n  }\r\n  /**\r\n   * using in toolbar menu\r\n   * @param event json\r\n   */\r\n  public mainFabButtonClick(event) {\r\n    this.onMainFabButtonClick.next(event);\r\n\r\n  }\r\n  /**\r\n   * using in toolbar menu\r\n   * @param event json\r\n   */\r\n  public fabButtonClick(event) {\r\n    this.onFabButtonClick.next(event);\r\n\r\n  }\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { NgxMaterialDrawerEventEmitter } from './mat-event-emitter.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxNavService {\r\n  public appDrawer: any;\r\n  public isMiniVarient: any;\r\n  public isOpened: boolean;\r\n  public currentUrl = new BehaviorSubject<string>(undefined);\r\n  public isDrawerOpened = false;\r\n  constructor(\r\n    public matEventEmitterService: NgxMaterialDrawerEventEmitter,\r\n  ) {\r\n  }\r\n  public closeNav() {\r\n    if (!this.isMiniVarient) {\r\n      this.appDrawer.close();\r\n    }\r\n    this.isOpened = false;\r\n    this.matEventEmitterService.sideNavClosed(this.getData(this.isOpened));\r\n  }\r\n\r\n  public openNav() {\r\n    if (!this.isMiniVarient) {\r\n      this.appDrawer.open();\r\n    }\r\n    this.isOpened = true;\r\n    this.matEventEmitterService.sideNavOpen(this.getData(this.isOpened));\r\n  }\r\n  \r\n  public toggleNav() {\r\n    if (!this.isMiniVarient) {\r\n      this.appDrawer.toggle();\r\n    }\r\n    this.isOpened = !this.isOpened;\r\n    if(this.isOpened){\r\n      this.matEventEmitterService.sideNavOpen(this.getData(this.isOpened));\r\n    }else{\r\n      this.matEventEmitterService.sideNavClosed(this.getData(this.isOpened));\r\n    }\r\n    this.matEventEmitterService.navStateChange(this.getData(this.isOpened));\r\n  }\r\n\r\n  getData(b): object {\r\n    return {\r\n      drawer: this.appDrawer,\r\n      isOpened: b\r\n    }\r\n  }\r\n}\r\n","import { Component, ViewChild, ElementRef, AfterViewInit, EventEmitter, Input, Output, OnInit } from '@angular/core';\r\nimport { VERSION } from '@angular/material';\r\nimport { NgxNavService } from '../utils/nav.service';\r\nimport { NgxMaterialDrawerEventEmitter } from '../utils/mat-event-emitter.service';\r\n@Component({\r\n  selector: 'ngx-material-drawer',\r\n  templateUrl: './material-drawer.component.html',\r\n  styleUrls: ['./material-drawer.component.scss']\r\n})\r\nexport class NgxMaterialDrawerComponent implements AfterViewInit, OnInit {\r\n  @ViewChild('appDrawer') appDrawer: ElementRef;\r\n\r\n\r\n  @Input('data') navData: any;\r\n\r\n  @Output() public onMatDrawerInit: any = new EventEmitter();\r\n  @Output() public onMatDrawerAfterViewInit: any = new EventEmitter();\r\n  @Output() public onNavStateChange: any = new EventEmitter();\r\n  @Output() public onDataChange: any = new EventEmitter();\r\n  @Output() public onSideNavOpen: any = new EventEmitter();\r\n  @Output() public onSideNavClosed: any = new EventEmitter();\r\n  @Output() public onMinVarientChange: any = new EventEmitter();\r\n  @Output() public onSideNavItemClick: any = new EventEmitter();\r\n  @Output() public onSideNavItemExpanded: any = new EventEmitter();\r\n  @Output() public onSideNavItemCollapsed: any = new EventEmitter();\r\n  @Output() public onMenuItemClick: any = new EventEmitter();\r\n  @Output() public onSerachValueChange: any = new EventEmitter();\r\n  @Output() public onSerachFocusIn: any = new EventEmitter();\r\n  @Output() public onSerachFocusOut: any = new EventEmitter();\r\n  @Output() public onSerachInputOpen: any = new EventEmitter();\r\n  @Output() public onSerachInputClosed: any = new EventEmitter();\r\n  @Output() public onFabExpanded: any = new EventEmitter();\r\n  @Output() public onFabCollapsed: any = new EventEmitter();\r\n  @Output() public onMainFabButtonClick: any = new EventEmitter();\r\n  @Output() public onFabButtonClick: any = new EventEmitter();\r\n\r\n\r\n  //Material drawer version\r\n  public version = VERSION;\r\n\r\n  constructor(public navService: NgxNavService,\r\n    public matEventEmitterService: NgxMaterialDrawerEventEmitter) {\r\n    this.subscribeToEventEmitter();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.matEventEmitterService.dataChange(this.navData);\r\n    this.matEventEmitterService.onDataChange.subscribe(res => {\r\n      this.navData = res;\r\n      this.navService.isMiniVarient = this.navData['miniVarient'];\r\n      this.navService.isOpened = this.navData['opened'];\r\n    })\r\n    this.matEventEmitterService.matDrawerInit(this.navData);\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    this.navService.appDrawer = this.appDrawer;\r\n    this.matEventEmitterService.matDrawerAfterViewInit(this.navData);\r\n  }\r\n  private subscribeToEventEmitter() {\r\n    this.matEventEmitterService.onMatDrawerInit.subscribe((event) => {\r\n      this.onMatDrawerInit.emit(event);\r\n    })\r\n    this.matEventEmitterService.onMatDrawerAfterViewInit.subscribe((event) => {\r\n      this.onMatDrawerAfterViewInit.emit(event);\r\n    })\r\n    this.matEventEmitterService.onNavStateChange.subscribe((event) => {\r\n      this.onNavStateChange.emit(event);\r\n    })\r\n    this.matEventEmitterService.onDataChange.subscribe((event) => {\r\n      this.onDataChange.emit(event);\r\n    })\r\n    this.matEventEmitterService.onSideNavOpen.subscribe((event) => {\r\n      this.onSideNavOpen.emit(event);\r\n    })\r\n    this.matEventEmitterService.onSideNavClosed.subscribe((event) => {\r\n      this.onSideNavClosed.emit(event);\r\n    })\r\n    this.matEventEmitterService.onMinVarientChange.subscribe((event) => {\r\n      this.onMinVarientChange.emit(event);\r\n    })\r\n    this.matEventEmitterService.onSideNavItemClick.subscribe((event) => {\r\n      this.onSideNavItemClick.emit(event);\r\n    })\r\n    this.matEventEmitterService.onSideNavItemExpanded.subscribe((event) => {\r\n      this.onSideNavItemExpanded.emit(event);\r\n    })\r\n    this.matEventEmitterService.onSideNavItemCollapsed.subscribe((event) => {\r\n      this.onSideNavItemCollapsed.emit(event);\r\n    })\r\n    this.matEventEmitterService.onMenuItemClick.subscribe((event) => {\r\n      this.onMenuItemClick.emit(event);\r\n    })\r\n    this.matEventEmitterService.onSearchValueChange.subscribe((event) => {\r\n      this.onSerachValueChange.emit(event);\r\n    })\r\n    this.matEventEmitterService.onSerachFocusIn.subscribe((event) => {\r\n      this.onSerachFocusIn.emit(event);\r\n    })\r\n    this.matEventEmitterService.onSerachFocusOut.subscribe((event) => {\r\n      this.onSerachFocusOut.emit(event);\r\n    })\r\n    this.matEventEmitterService.onFabExpanded.subscribe((event) => {\r\n      this.onFabExpanded.emit(event);\r\n    })\r\n    this.matEventEmitterService.onFabCollapsed.subscribe((event) => {\r\n      this.onFabCollapsed.emit(event);\r\n    })\r\n    this.matEventEmitterService.onMainFabButtonClick.subscribe((event) => {\r\n      this.onMainFabButtonClick.emit(event);\r\n    })\r\n    this.matEventEmitterService.onFabButtonClick.subscribe((event) => {\r\n      this.onFabButtonClick.emit(event);\r\n    })\r\n\r\n    this.matEventEmitterService.onSerachInputOpen.subscribe((event) => {\r\n      this.onSerachInputOpen.emit(event);\r\n    })\r\n\r\n    this.matEventEmitterService.onSerachInputClosed.subscribe((event) => {\r\n      this.onSerachInputClosed.emit(event);\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, HostBinding, Input, OnInit, AfterViewInit, Output, EventEmitter } from '@angular/core';\r\nimport { NgxNavService } from '../utils/nav.service';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { NgxMaterialDrawerEventEmitter } from '../utils/mat-event-emitter.service';\r\n\r\n@Component({\r\n  selector: 'app-nav-list-item',\r\n  templateUrl: './nav-list-item.component.html',\r\n  styleUrls: ['./nav-list-item.component.scss'],\r\n  animations: [\r\n    trigger('indicatorRotate', [\r\n      state('collapsed', style({ transform: 'rotate(0deg)' })),\r\n      state('expanded', style({ transform: 'rotate(180deg)' })),\r\n      transition('expanded <=> collapsed',\r\n        animate('225ms cubic-bezier(0.4,0.0,0.2,1)')\r\n      ),\r\n    ])\r\n  ]\r\n})\r\nexport class NgxNavListItemComponent implements OnInit {\r\n\r\n  expanded: boolean;\r\n  @HostBinding('attr.aria-expanded') ariaExpanded = this.expanded;\r\n  @Input() item: any;\r\n  @Input() depth: number;  \r\n  constructor(public navService: NgxNavService,\r\n    public matEventEmitterService:NgxMaterialDrawerEventEmitter) {\r\n    if (this.depth === undefined) {\r\n      this.depth = 0;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.navService.currentUrl.subscribe((url: string) => {\r\n      if (this.item.route && url) {\r\n        // console.log(`Checking '/${this.item.route}' against '${url}'`);\r\n        this.expanded = url.indexOf(`/${this.item.route}`) === 0;\r\n        this.ariaExpanded = this.expanded;\r\n        // console.log(`${this.item.route} is expanded: ${this.expanded}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  onItemSelected(item: any) {\r\n    if (!item.children || !item.children.length) {\r\n      if (item.onClickClose) {\r\n        this.navService.closeNav();\r\n      }\r\n      this.matEventEmitterService.sideNavItemClick(item);\r\n    }\r\n    if (item.children && item.children.length) {\r\n      this.expanded = !this.expanded;\r\n      if (this.expanded) {\r\n        this.matEventEmitterService.sideNavItemExpanded(item);\r\n      } else {\r\n        this.matEventEmitterService.sideNavItemCollapsed(item);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { NgxNavService } from '../utils/nav.service';\r\nimport { NgxMaterialDrawerEventEmitter } from '../utils/mat-event-emitter.service';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\n\r\n\r\n@Component({\r\n  selector: 'app-top-nav',\r\n  templateUrl: './top-nav.component.html',\r\n  styleUrls: ['./top-nav.component.scss'],\r\n  animations: [\r\n    trigger(\r\n      'enterAnimation', [\r\n        transition(':enter', [\r\n          style({ transform: 'translateX(100%)', opacity: 0 }),\r\n          animate('500ms', style({ transform: 'translateX(0)', opacity: 1 }))\r\n        ]),\r\n        transition(':leave', [\r\n          style({ transform: 'translateX(0)', opacity: 1 }),\r\n          animate('500ms', style({ transform: 'translateX(100%)', opacity: 0 }))\r\n        ])\r\n      ]\r\n    )\r\n  ],\r\n})\r\nexport class NgxTopNavComponent implements OnInit {\r\n  @ViewChild(\"ngxSearchBox\") ngxSearchBox: ElementRef;\r\n  @Input() config: any;\r\n  constructor(public matEventEmitterService: NgxMaterialDrawerEventEmitter, public navService: NgxNavService) { }\r\n  public isDrawerOpened;\r\n  public isSearchActive: boolean;\r\n  public searchValue: string = \"\";\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.matEventEmitterService.onNavStateChange.subscribe((flag: any) => {\r\n      this.isDrawerOpened = flag.isOpened;\r\n    })\r\n    this.matEventEmitterService.onSideNavClosed.subscribe((flag: any) => {\r\n      this.isDrawerOpened = flag.isOpened;\r\n    })\r\n    this.matEventEmitterService.onSideNavClosed.subscribe((flag: any) => {\r\n      this.isDrawerOpened = flag.isOpened;\r\n    })\r\n  }\r\n\r\n  public onItemSelected(item: any) {\r\n    if (!item.children || !item.children.length) {\r\n      this.matEventEmitterService.menuItemClick(item);\r\n    }\r\n  }\r\n\r\n  public toggleSearchBar() {\r\n    this.isSearchActive = !this.isSearchActive;\r\n    let searchObject = {\r\n      value: this.searchValue,\r\n      inputRef: this.ngxSearchBox\r\n    }\r\n    if(this.isSearchActive){\r\n      this.matEventEmitterService.serachInputOpen(searchObject)\r\n    }else{\r\n      this.matEventEmitterService.serachInputClosed(searchObject)\r\n\r\n    }\r\n  }\r\n\r\n  public onSearchValueChange(event) {\r\n    let searchObject = {\r\n      value: this.searchValue,\r\n      inputRef: this.ngxSearchBox\r\n    }\r\n    this.matEventEmitterService.searchValueChange(searchObject);\r\n  }\r\n\r\n  public onSerachFocusIn(event) {\r\n    let searchObject = {\r\n      value: this.searchValue,\r\n      inputRef: this.ngxSearchBox\r\n    }\r\n    this.matEventEmitterService.serachFocusIn(searchObject);\r\n  }\r\n\r\n  public onSerachFocusOut(event) {\r\n    let searchObject = {\r\n      value: this.searchValue,\r\n      inputRef: this.ngxSearchBox\r\n    }\r\n    this.matEventEmitterService.serachFocusOut(searchObject);\r\n  }\r\n}","import { Component, HostBinding, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxNavService } from '../utils/nav.service';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatMenu } from '@angular/material';\r\nimport { NgxMaterialDrawerEventEmitter } from '../utils/mat-event-emitter.service';\r\n\r\n@Component({\r\n  selector: 'app-menu-list-item',\r\n  templateUrl: './menu-list-item.component.html',\r\n  styleUrls: ['./menu-list-item.component.scss'],\r\n  exportAs: 'menuInMenuListItemComponent'\r\n})\r\nexport class NgxMenuListItemComponent implements OnInit {\r\n  expanded: boolean;\r\n  @HostBinding('attr.aria-expanded') ariaExpanded = this.expanded;\r\n  @ViewChild('childMenu') public childMenu;\r\n  @Input() menus: any;\r\n  @Input() depth: number;\r\n  @Input() matMenu: MatMenu;\r\n  constructor(public navService: NgxNavService,\r\n    public matEventEmitterService: NgxMaterialDrawerEventEmitter) {\r\n    if (this.depth === undefined) {\r\n      this.depth = 0;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.navService.currentUrl.subscribe((url: string) => {\r\n      if (this.menus.route && url) {\r\n        // console.log(`Checking '/${this.item.route}' against '${url}'`);\r\n        this.expanded = url.indexOf(`/${this.menus.route}`) === 0;\r\n        this.ariaExpanded = this.expanded;\r\n        // console.log(`${this.item.route} is expanded: ${this.expanded}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  onItemSelected(item: any) {\r\n    if (!item.children || !item.children.length) {\r\n      \r\n      this.matEventEmitterService.menuItemClick(item);\r\n    }\r\n    if (item.children && item.children.length) {\r\n      this.expanded = !this.expanded;\r\n      if (this.expanded) {\r\n        this.matEventEmitterService.menuItemExpanded(item);\r\n      } else {\r\n        this.matEventEmitterService.menuItemCollapsed(item);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, HostBinding, Input, OnInit, AfterViewInit } from '@angular/core';\r\n\r\nimport { NgxNavService } from '../utils/nav.service';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { NgxMaterialDrawerEventEmitter } from '../utils/mat-event-emitter.service';\r\n\r\n@Component({\r\n  selector: 'app-nav-list-item-mini',\r\n  templateUrl: './nav-list-item-mini.component.html',\r\n  styleUrls: ['./nav-list-item-mini.component.scss'],\r\n  animations: [\r\n    trigger('indicatorRotate', [\r\n      state('collapsed', style({ transform: 'rotate(0deg)' })),\r\n      state('expanded', style({ transform: 'rotate(180deg)' })),\r\n      transition('expanded <=> collapsed',\r\n        animate('225ms cubic-bezier(0.4,0.0,0.2,1)')\r\n      ),\r\n    ])\r\n  ]\r\n})\r\nexport class NgxNavListItemMiniComponent implements OnInit {\r\n  expanded: boolean;\r\n  @HostBinding('attr.aria-expanded') ariaExpanded = this.expanded;\r\n  @Input() item: any;\r\n  @Input() depth: number;\r\n\r\n  constructor(public navService: NgxNavService,\r\n    public matEventEmitterService: NgxMaterialDrawerEventEmitter) {\r\n    if (this.depth === undefined) {\r\n      this.depth = 0;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.navService.currentUrl.subscribe((url: string) => {\r\n      if (this.item.route && url) {\r\n        // console.log(`Checking '/${this.item.route}' against '${url}'`);\r\n        this.expanded = url.indexOf(`/${this.item.route}`) === 0;\r\n        this.ariaExpanded = this.expanded;\r\n        // console.log(`${this.item.route} is expanded: ${this.expanded}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  onItemSelected(item: any) {\r\n    if (!item.children || !item.children.length) {\r\n      \r\n      if (item.onClickClose) {\r\n        this.navService.closeNav();\r\n      }\r\n      this.matEventEmitterService.sideNavItemClick(item);\r\n    }\r\n    if (item.children && item.children.length) {\r\n      this.expanded = !this.expanded;\r\n      if (this.expanded) {\r\n        this.matEventEmitterService.sideNavItemExpanded(item);\r\n      } else {\r\n        this.matEventEmitterService.sideNavItemCollapsed(item);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatRippleModule,\r\n  MatSidenavModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n} from '@angular/material';\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required.\r\n */\r\n@NgModule({\r\n    exports: [\r\n      MatButtonModule,\r\n      MatIconModule,\r\n      MatListModule,\r\n      MatMenuModule,\r\n      MatRippleModule,\r\n      MatSidenavModule,\r\n      MatToolbarModule,\r\n      MatTooltipModule\r\n    ],\r\n    declarations: []\r\n  })\r\n  export class MaterialModule { }","import { Component, HostBinding, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxNavService } from '../utils/nav.service';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatMenu } from '@angular/material';\r\nimport { NgxMaterialDrawerEventEmitter } from '../utils/mat-event-emitter.service';\r\n\r\n@Component({\r\n    selector: 'app-fab',\r\n    templateUrl: './fab.component.html',\r\n    styleUrls: ['./fab.component.scss'],\r\n    animations: [\r\n        trigger('slideInOut', [\r\n            transition(':enter', [\r\n                style({ transform: 'translateY(100%)' }),\r\n                animate('200ms ease-in', style({ transform: 'translateY(0%)' }))\r\n            ]),\r\n            transition(':leave', [\r\n                animate('200ms ease-in', style({ transform: 'translateY(100%)' }))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class NgxFabComponent implements OnInit {\r\n    public expanded: boolean = false;\r\n    @Input() fabData: any;\r\n    constructor(public navService: NgxNavService,\r\n        public matEventEmitterService: NgxMaterialDrawerEventEmitter) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    onFabClick(item: any) {\r\n        this.matEventEmitterService.fabButtonClick(item);\r\n    }\r\n\r\n    onMainFabClick(item: any) {\r\n        this.expanded = !this.expanded;\r\n        if (this.fabData &&\r\n            this.fabData.children &&\r\n            this.fabData.children.length &&\r\n            this.fabData.children.filter(f => f.isEnable).length) {\r\n            if (this.expanded) {\r\n                this.matEventEmitterService.fabExpanded(item);\r\n            } else {\r\n                this.matEventEmitterService.fabCollapsed(item);\r\n            }\r\n        } else {\r\n            this.matEventEmitterService.mainFabButtonClick(item);\r\n        }\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgxNavListItemComponent as NgxNavListItemComponent } from './nav-list-item/nav-list-item.component';\r\nimport { NgxNavService } from './utils/nav.service';\r\nimport { NgxTopNavComponent } from './top-nav/top-nav.component';\r\nimport { NgxMenuListItemComponent } from './menu-list-item/menu-list-item.component';\r\nimport { NgxMaterialDrawerComponent } from './material-drawer/material-drawer.component';\r\nimport { NgxNavListItemMiniComponent } from './nav-list-item-mini/nav-list-item-mini.component';\r\nimport { MaterialModule } from './material.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxFabComponent } from './fab/fab.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    MaterialModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    NgxNavListItemComponent,\r\n    NgxMenuListItemComponent,\r\n    NgxMaterialDrawerComponent,\r\n    NgxTopNavComponent,\r\n    NgxNavListItemMiniComponent,\r\n    NgxFabComponent\r\n  ],\r\n  bootstrap: [NgxMaterialDrawerComponent],\r\n  providers: [NgxNavService],\r\n  exports:[NgxMaterialDrawerComponent]\r\n})\r\nexport class NgxMaterialDrawerModule { }"]}