{"version":3,"file":"ngx-material-drawer.umd.js.map","sources":["ng://ngx-material-drawer/lib/app/utils/mat-event-emitter.service.ts","ng://ngx-material-drawer/lib/app/utils/nav.service.ts","ng://ngx-material-drawer/lib/app/material-drawer/material-drawer.component.ts","ng://ngx-material-drawer/lib/app/nav-list-item/nav-list-item.component.ts","ng://ngx-material-drawer/lib/app/top-nav/top-nav.component.ts","ng://ngx-material-drawer/lib/app/menu-list-item/menu-list-item.component.ts","ng://ngx-material-drawer/lib/app/nav-list-item-mini/nav-list-item-mini.component.ts","ng://ngx-material-drawer/lib/app/material.module.ts","ng://ngx-material-drawer/lib/app/matrial-drawer.module.ts"],"sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatEventEmitterService {\n\n  public onMatDrawerInit = new Subject();\n  public onMatDrawerAfterViewInit = new Subject();\n  public onNavStateChange = new Subject();\n  public onDataChange = new ReplaySubject(1);\n  public onSideNavOpen = new Subject();\n  public onSideNavClosed = new Subject();\n  public onMinVarientChange = new Subject();\n  public onSideNavItemClick = new Subject();\n  public onSideNavItemExpanded = new Subject();\n  public onSideNavItemCollapsed = new Subject();\n  public onMenuItemClick = new Subject();\n  public onMenuItemExpanded = new Subject();\n  public onMenuItemCollapsed = new Subject();\n\n  constructor() { }\n  /**\n   * Material drawer Main component life cycle\n   * @param event json\n   */\n  public matDrawerInit(event){\n    this.onMatDrawerInit.next(event);\n  \n  }\n  /**\n   * Material drawer Main component life cycle\n   * @param event json\n   */\n  public matDrawerAfterViewInit(event){\n    this.onMatDrawerAfterViewInit.next(event);\n  \n  }\n  /**\n   * using on side nav toggle\n   * @param event json\n   */\n  public navStateChange(event){\n    this.onNavStateChange.next(event);\n    \n  }\n\n  /**\n   * on data chamge\n   * @param event new json\n   */\n  public dataChange(event){\n    this.onDataChange.next(event);\n    \n  }\n\n  /**\n   * using on side nav open\n   * @param event json\n   */\n  public sideNavOpen(event){\n    this.onSideNavOpen.next(event);\n    \n  }\n\n  /**\n   * using on side nav closed\n   * @param event json\n   */\n  public sideNavClosed(event){\n    this.onSideNavClosed.next(event);\n    \n  }\n\n  /**\n   * Not using currently\n   * @param event json\n   */\n  public minVarientChange(event){\n    this.onMinVarientChange.next(event);\n    \n  }\n  /**\n   * using in side nav item\n   * @param event json\n   */\n  public sideNavItemClick(event){\n    this.onSideNavItemClick.next(event);\n    \n  }\n  /**\n   * using in side nav item\n   * @param event json\n   */\n  public sideNavItemExpanded(event){\n    this.onSideNavItemExpanded.next(event);\n    \n  }\n  /**\n   * using in side nav item\n   * @param event json\n   */\n  public sideNavItemCollapsed(event){\n    this.onSideNavItemCollapsed.next(event);\n    \n  }\n  /**\n   * using in toolbar menu\n   * @param event json\n   */\n  public menuItemClick(event){\n    this.onMenuItemClick.next(event);\n    \n  }\n  /**\n   * using in toolbar menu\n   * @param event json\n   */\n  public menuItemExpanded(event){\n    this.onMenuItemExpanded.next(event);\n    \n  }\n  /**\n   * using in toolbar menu\n   * @param event json\n   */\n  public menuItemCollapsed(event){\n    this.onMenuItemCollapsed.next(event);\n    \n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { MatEventEmitterService } from './mat-event-emitter.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavService {\r\n  public appDrawer: any;\r\n  public isMiniVarient: any;\r\n  public isOpened: boolean;\r\n  public currentUrl = new BehaviorSubject<string>(undefined);\r\n  public isDrawerOpened = false;\r\n  constructor(\r\n    public matEventEmitterService: MatEventEmitterService,\r\n  ) {\r\n  }\r\n  public closeNav() {\r\n    if (!this.isMiniVarient) {\r\n      this.appDrawer.close();\r\n    }\r\n    this.isOpened = false;\r\n    this.matEventEmitterService.sideNavClosed(this.getData(this.isOpened));\r\n  }\r\n\r\n  public openNav() {\r\n    if (!this.isMiniVarient) {\r\n      this.appDrawer.open();\r\n    }\r\n    this.isOpened = true;\r\n    this.matEventEmitterService.sideNavOpen(this.getData(this.isOpened));\r\n  }\r\n  \r\n  public toggleNav() {\r\n    if (!this.isMiniVarient) {\r\n      this.appDrawer.toggle();\r\n    }\r\n    this.isOpened = !this.isOpened;\r\n    if(this.isOpened){\r\n      this.matEventEmitterService.sideNavOpen(this.getData(this.isOpened));\r\n    }else{\r\n      this.matEventEmitterService.sideNavClosed(this.getData(this.isOpened));\r\n    }\r\n    this.matEventEmitterService.navStateChange(this.getData(this.isOpened));\r\n  }\r\n\r\n  getData(b): object {\r\n    return {\r\n      drawer: this.appDrawer,\r\n      isOpened: b\r\n    }\r\n  }\r\n}\r\n","import { Component, ViewChild, ElementRef, AfterViewInit, EventEmitter, Input, Output, OnInit } from '@angular/core';\r\nimport { VERSION } from '@angular/material';\r\nimport { NavService } from '../utils/nav.service';\r\nimport { MatEventEmitterService } from '../utils/mat-event-emitter.service';\r\n@Component({\r\n  selector: 'ngx-material-drawer',\r\n  templateUrl: './material-drawer.component.html',\r\n  styleUrls: ['./material-drawer.component.scss']\r\n})\r\nexport class MaterialDrawerComponent implements AfterViewInit, OnInit {\r\n  @ViewChild('appDrawer') appDrawer: ElementRef;\r\n\r\n\r\n  @Input('data') navData: any;\r\n\r\n  @Output() public onMatDrawerInit: any = new EventEmitter();\r\n  @Output() public onMatDrawerAfterViewInit: any = new EventEmitter();\r\n  @Output() public onNavStateChange: any = new EventEmitter();\r\n  @Output() public onDataChange: any = new EventEmitter();\r\n  @Output() public onSideNavOpen: any = new EventEmitter();\r\n  @Output() public onSideNavClosed: any = new EventEmitter();\r\n  @Output() public onMinVarientChange: any = new EventEmitter();\r\n  @Output() public onSideNavItemClick: any = new EventEmitter();\r\n  @Output() public onSideNavItemExpanded: any = new EventEmitter();\r\n  @Output() public onSideNavItemCollapsed: any = new EventEmitter();\r\n  @Output() public onMenuItemClick: any = new EventEmitter();\r\n\r\n\r\n  //Material drawer version\r\n  public version = VERSION;\r\n\r\n  constructor(public navService: NavService,\r\n    public matEventEmitterService: MatEventEmitterService) {\r\n    this.subscribeToEventEmitter();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.matEventEmitterService.dataChange(this.navData);\r\n    this.matEventEmitterService.onDataChange.subscribe(res => {\r\n      this.navData = res;\r\n      this.navService.isMiniVarient = this.navData['miniVarient'];\r\n      this.navService.isOpened = this.navData['opened'];\r\n    })\r\n    this.matEventEmitterService.matDrawerInit(this.navData);\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    this.navService.appDrawer = this.appDrawer;\r\n    this.matEventEmitterService.matDrawerAfterViewInit(this.navData);\r\n  }\r\n  private subscribeToEventEmitter() {\r\n    this.matEventEmitterService.onMatDrawerInit.subscribe((event) => {\r\n      this.onMatDrawerInit.emit(event);\r\n    })\r\n    this.matEventEmitterService.onMatDrawerAfterViewInit.subscribe((event) => {\r\n      this.onMatDrawerAfterViewInit.emit(event);\r\n    })\r\n    this.matEventEmitterService.onNavStateChange.subscribe((event) => {\r\n      this.onNavStateChange.emit(event);\r\n    })\r\n    this.matEventEmitterService.onDataChange.subscribe((event) => {\r\n      this.onDataChange.emit(event);\r\n    })\r\n    this.matEventEmitterService.onSideNavOpen.subscribe((event) => {\r\n      this.onSideNavOpen.emit(event);\r\n    })\r\n    this.matEventEmitterService.onSideNavClosed.subscribe((event) => {\r\n      this.onSideNavClosed.emit(event);\r\n    })\r\n    this.matEventEmitterService.onMinVarientChange.subscribe((event) => {\r\n      this.onMinVarientChange.emit(event);\r\n    })\r\n    this.matEventEmitterService.onSideNavItemClick.subscribe((event) => {\r\n      this.onSideNavItemClick.emit(event);\r\n    })\r\n    this.matEventEmitterService.onSideNavItemExpanded.subscribe((event) => {\r\n      this.onSideNavItemExpanded.emit(event);\r\n    })\r\n    this.matEventEmitterService.onSideNavItemCollapsed.subscribe((event) => {\r\n      this.onSideNavItemCollapsed.emit(event);\r\n    })\r\n    this.matEventEmitterService.onMenuItemClick.subscribe((event) => {\r\n      this.onMenuItemClick.emit(event);\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, HostBinding, Input, OnInit, AfterViewInit, Output, EventEmitter } from '@angular/core';\r\nimport { NavService } from '../utils/nav.service';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatEventEmitterService } from '../utils/mat-event-emitter.service';\r\n\r\n@Component({\r\n  selector: 'app-nav-list-item',\r\n  templateUrl: './nav-list-item.component.html',\r\n  styleUrls: ['./nav-list-item.component.scss'],\r\n  animations: [\r\n    trigger('indicatorRotate', [\r\n      state('collapsed', style({ transform: 'rotate(0deg)' })),\r\n      state('expanded', style({ transform: 'rotate(180deg)' })),\r\n      transition('expanded <=> collapsed',\r\n        animate('225ms cubic-bezier(0.4,0.0,0.2,1)')\r\n      ),\r\n    ])\r\n  ]\r\n})\r\nexport class NavListItemComponent implements OnInit {\r\n\r\n  expanded: boolean;\r\n  @HostBinding('attr.aria-expanded') ariaExpanded = this.expanded;\r\n  @Input() item: any;\r\n  @Input() depth: number;  \r\n  constructor(public navService: NavService,\r\n    public matEventEmitterService:MatEventEmitterService) {\r\n    if (this.depth === undefined) {\r\n      this.depth = 0;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.navService.currentUrl.subscribe((url: string) => {\r\n      if (this.item.route && url) {\r\n        // console.log(`Checking '/${this.item.route}' against '${url}'`);\r\n        this.expanded = url.indexOf(`/${this.item.route}`) === 0;\r\n        this.ariaExpanded = this.expanded;\r\n        // console.log(`${this.item.route} is expanded: ${this.expanded}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  onItemSelected(item: any) {\r\n    if (!item.children || !item.children.length) {\r\n      if (item.onClickClose) {\r\n        this.navService.closeNav();\r\n      }\r\n      this.matEventEmitterService.sideNavItemClick(item);\r\n    }\r\n    if (item.children && item.children.length) {\r\n      this.expanded = !this.expanded;\r\n      if (this.expanded) {\r\n        this.matEventEmitterService.sideNavItemExpanded(item);\r\n      } else {\r\n        this.matEventEmitterService.sideNavItemCollapsed(item);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NavService } from '../utils/nav.service';\r\nimport { MatEventEmitterService } from '../utils/mat-event-emitter.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-top-nav',\r\n  templateUrl: './top-nav.component.html',\r\n  styleUrls: ['./top-nav.component.scss']\r\n})\r\nexport class TopNavComponent implements OnInit {\r\n  @Input() config: any;\r\n  constructor(public matEventEmitterService: MatEventEmitterService,public navService:NavService) { }\r\n  public isDrawerOpened;\r\n  ngOnInit() {\r\n  }\r\n  ngAfterViewInit() {\r\n    this.matEventEmitterService.onNavStateChange.subscribe((flag:any) => {\r\n      this.isDrawerOpened = flag.isOpened;\r\n    })\r\n    this.matEventEmitterService.onSideNavClosed.subscribe((flag:any) => {\r\n      this.isDrawerOpened = flag.isOpened;\r\n    })\r\n    this.matEventEmitterService.onSideNavClosed.subscribe((flag:any) => {\r\n      this.isDrawerOpened = flag.isOpened;\r\n    })\r\n  }\r\n  onItemSelected(item: any) {\r\n    if (!item.children || !item.children.length) {\r\n      \r\n      if (item.onClickClose) {\r\n        this.navService.closeNav();\r\n      }\r\n      this.matEventEmitterService.sideNavItemClick(item);\r\n    }\r\n  }\r\n\r\n}","import { Component, HostBinding, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { NavService } from '../utils/nav.service';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatMenu } from '@angular/material';\r\nimport { MatEventEmitterService } from '../utils/mat-event-emitter.service';\r\n\r\n@Component({\r\n  selector: 'app-menu-list-item',\r\n  templateUrl: './menu-list-item.component.html',\r\n  styleUrls: ['./menu-list-item.component.scss'],\r\n  exportAs: 'menuInMenuListItemComponent'\r\n})\r\nexport class MenuListItemComponent implements OnInit {\r\n  expanded: boolean;\r\n  @HostBinding('attr.aria-expanded') ariaExpanded = this.expanded;\r\n  @ViewChild('childMenu') public childMenu;\r\n  @Input() menus: any;\r\n  @Input() depth: number;\r\n  @Input() matMenu: MatMenu;\r\n  constructor(public navService: NavService,\r\n    public matEventEmitterService: MatEventEmitterService) {\r\n    if (this.depth === undefined) {\r\n      this.depth = 0;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.navService.currentUrl.subscribe((url: string) => {\r\n      if (this.menus.route && url) {\r\n        // console.log(`Checking '/${this.item.route}' against '${url}'`);\r\n        this.expanded = url.indexOf(`/${this.menus.route}`) === 0;\r\n        this.ariaExpanded = this.expanded;\r\n        // console.log(`${this.item.route} is expanded: ${this.expanded}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  onItemSelected(item: any) {\r\n    if (!item.children || !item.children.length) {\r\n      \r\n      this.matEventEmitterService.menuItemClick(item);\r\n    }\r\n    if (item.children && item.children.length) {\r\n      this.expanded = !this.expanded;\r\n      if (this.expanded) {\r\n        this.matEventEmitterService.menuItemExpanded(item);\r\n      } else {\r\n        this.matEventEmitterService.menuItemCollapsed(item);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, HostBinding, Input, OnInit, AfterViewInit } from '@angular/core';\r\n\r\nimport { NavService } from '../utils/nav.service';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatEventEmitterService } from '../utils/mat-event-emitter.service';\r\n\r\n@Component({\r\n  selector: 'app-nav-list-item-mini',\r\n  templateUrl: './nav-list-item-mini.component.html',\r\n  styleUrls: ['./nav-list-item-mini.component.scss'],\r\n  animations: [\r\n    trigger('indicatorRotate', [\r\n      state('collapsed', style({ transform: 'rotate(0deg)' })),\r\n      state('expanded', style({ transform: 'rotate(180deg)' })),\r\n      transition('expanded <=> collapsed',\r\n        animate('225ms cubic-bezier(0.4,0.0,0.2,1)')\r\n      ),\r\n    ])\r\n  ]\r\n})\r\nexport class NavListItemMiniComponent implements OnInit {\r\n  expanded: boolean;\r\n  @HostBinding('attr.aria-expanded') ariaExpanded = this.expanded;\r\n  @Input() item: any;\r\n  @Input() depth: number;\r\n\r\n  constructor(public navService: NavService,\r\n    public matEventEmitterService: MatEventEmitterService) {\r\n    if (this.depth === undefined) {\r\n      this.depth = 0;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.navService.currentUrl.subscribe((url: string) => {\r\n      if (this.item.route && url) {\r\n        // console.log(`Checking '/${this.item.route}' against '${url}'`);\r\n        this.expanded = url.indexOf(`/${this.item.route}`) === 0;\r\n        this.ariaExpanded = this.expanded;\r\n        // console.log(`${this.item.route} is expanded: ${this.expanded}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  onItemSelected(item: any) {\r\n    if (!item.children || !item.children.length) {\r\n      \r\n      if (item.onClickClose) {\r\n        this.navService.closeNav();\r\n      }\r\n      this.matEventEmitterService.sideNavItemClick(item);\r\n    }\r\n    if (item.children && item.children.length) {\r\n      this.expanded = !this.expanded;\r\n      if (this.expanded) {\r\n        this.matEventEmitterService.sideNavItemExpanded(item);\r\n      } else {\r\n        this.matEventEmitterService.sideNavItemCollapsed(item);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatRippleModule,\r\n  MatSidenavModule,\r\n  MatToolbarModule,\r\n} from '@angular/material';\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required.\r\n */\r\n@NgModule({\r\n    exports: [\r\n      MatButtonModule,\r\n      MatIconModule,\r\n      MatListModule,\r\n      MatMenuModule,\r\n      MatRippleModule,\r\n      MatSidenavModule,\r\n      MatToolbarModule,\r\n    ],\r\n    declarations: []\r\n  })\r\n  export class MaterialModule { }","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NavListItemComponent as NavListItemComponent } from './nav-list-item/nav-list-item.component';\r\nimport { NavService } from './utils/nav.service';\r\nimport { TopNavComponent } from './top-nav/top-nav.component';\r\nimport { MenuListItemComponent } from './menu-list-item/menu-list-item.component';\r\nimport { MaterialDrawerComponent } from './material-drawer/material-drawer.component';\r\nimport { NavListItemMiniComponent } from './nav-list-item-mini/nav-list-item-mini.component';\r\nimport { MaterialModule } from './material.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    MaterialModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule\r\n  ],\r\n  declarations: [\r\n    NavListItemComponent,\r\n    MenuListItemComponent,\r\n    MaterialDrawerComponent,\r\n    TopNavComponent,\r\n    NavListItemMiniComponent\r\n  ],\r\n  bootstrap: [MaterialDrawerComponent],\r\n  providers: [NavService],\r\n  exports:[MaterialDrawerComponent]\r\n})\r\nexport class MaterialDrawerModule { }"],"names":["Subject","ReplaySubject","Injectable","BehaviorSubject","EventEmitter","VERSION","Component","ViewChild","Input","Output","trigger","state","style","transition","animate","HostBinding","NgModule","MatButtonModule","MatIconModule","MatListModule","MatMenuModule","MatRippleModule","MatSidenavModule","MatToolbarModule","BrowserModule","CommonModule","BrowserAnimationsModule","FlexLayoutModule"],"mappings":"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"}
